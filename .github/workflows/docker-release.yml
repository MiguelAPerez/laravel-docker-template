name: Image Release

on:
  push:
    tags:
      - v*

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) from Composer
        id: meta
        run: |
          echo "DOCKER_REPOSITORY=$(jq -r '.name' composer.json)" >> $GITHUB_OUTPUT
          echo "DOCKER_VERSION=$(jq -r '.version' composer.json)" >> $GITHUB_OUTPUT
          echo "DOCKER_DESCRIPTION=$(jq -r '.description' composer.json)" >> $GITHUB_OUTPUT

      - name: Validate does not already exist
        run: |
          if docker image inspect $IMAGE_NAME:$TAG &> /dev/null; then
            echo "Image already exists"
            exit 1
          fi

      - name: Build Docker image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ steps.meta.outputs.DOCKER_REPOSITORY }} .
          docker tag ${{ env.REGISTRY }}/${{ steps.meta.outputs.DOCKER_REPOSITORY }} ${{ env.REGISTRY }}/${{ steps.meta.outputs.DOCKER_REPOSITORY }}:latest
          docker tag ${{ env.REGISTRY }}/${{ steps.meta.outputs.DOCKER_REPOSITORY }} ${{ env.REGISTRY }}/${{ steps.meta.outputs.DOCKER_REPOSITORY }}:${{ steps.meta.outputs.DOCKER_VERSION }}

      - name: Push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.meta.outputs.DOCKER_REPOSITORY }}:${{ steps.meta.outputs.DOCKER_VERSION }},${{ env.REGISTRY }}/${{ steps.meta.outputs.DOCKER_REPOSITORY }}:latest
          labels: ${{ steps.meta.outputs.DOCKER_DESCRIPTION }}